@model IEnumerable<FineArt.Models.Competition>
@{
    ViewData["Title"] = "Award List";
    Layout = "_AdminLayout";
}

<div class="row page-titles mx-0">
    <div class="col-sm-6 p-md-0">
        <div class="welcome-text">
            <h4>Hi, Admin!</h4>
            <span class="mt-3">This section include all competitions listing...</span>
        </div>
    </div>
    <div class="col-sm-6 p-md-0 justify-content-sm-end mt-2 mt-sm-0 d-flex">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item active"><a href="javascript:void(0)">Competitions</a></li>
        </ol>
    </div>
</div>
@if (User.IsInRole("Admin"))
{   
<div class="d-flex justify-content-end align-items-end">
    <a asp-controller="Admin" asp-action="AddCompetition" type="button" class="btn btn-rounded btn-primary my-2">
        <span class="btn-icon-left text-primary">
            <i class="fa fa-plus color-primary"></i>
        </span>Add Competition
    </a>
</div>
}

<div class="loading loading-hidden"></div>
<div class="row">
    @foreach(var item in Model)
    {    
    <div class="col-xl-4 col-xxl-6 col-lg-6 col-sm-6">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <h5 class="card-title">@item.CompetitionTitle</h5>
                    
                        <div class="dropdown custom-dropdown show">
                            <button class="btn" data-toggle="dropdown" aria-expanded="true">
                                <i class="fa fa-ellipsis-v"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right" x-placement="top-end" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-157px, -134px, 0px);">
                                <a class="dropdown-item" asp-controller="Admin" asp-action="EditCompetition" asp-route-id="@item.CompetitionId">Edit</a>
                                <div class="sweetalert dropdown-item">
                                    <button class="btn competition-delete" data-id="@item.CompetitionId">Delete</button>
                                </div>
                            </div>
                        </div>
            </div>
            <div class="card-body">
                <p class="card-text"><strong>Term & Conditions : </strong> @item.Conditions</p>
                    <div class="basic-list-group">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Start Date <span class="badge badge-primary badge-pill">@item.StartDate</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                End Date <span class="badge badge-primary badge-pill">@item.EndDate</span>
                            </li>
                        </ul>
                    </div>
            </div>
            <div class="card-footer">
                <p class="card-text d-inline">
                        @if (GetCompetitionStatus(item.StartDate, item.EndDate) == "Ongoing")
                        {
                            <span class="badge badge-success badge-pill">Ongoing</span>
                        }
                        else if (GetCompetitionStatus(item.StartDate, item.EndDate) == "Upcoming")
                        {
                            <span class="badge badge-warning badge-pill">Upcoming</span>
                        }
                        else
                        {
                            <span class="badge badge-danger badge-pill">Ended</span>
                        }
                    </p>
            </div>
        </div>
    </div>
    }
</div>

@functions {
    string GetCompetitionStatus(string startDateString, string endDateString)
    {
        DateTime startDate, endDate;

        if (DateTime.TryParse(startDateString, out startDate) && DateTime.TryParse(endDateString, out endDate))
        {
            DateTime currentDate = DateTime.Now;

            if (currentDate < startDate)
            {
                return "Upcoming";
            }
            else if (currentDate >= startDate && currentDate.AddDays(-1) <= endDate)
            {
                return "Ongoing";
            }
            else
            {
                return "Ended";
            }
        }

        return "Invalid date format";
    }
}
